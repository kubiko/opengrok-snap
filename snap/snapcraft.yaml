name: opengrok
summary: OpenGrok is a fast and usable source code search and cross reference engine
description: |
 OpenGrok is a fast and usable source code search and cross reference engine, written in Java.
 It helps you search, cross-reference and navigate your source tree. It can understand various
 program file formats and version control histories of many source code management systems.

confinement: strict
grade: stable
adopt-info: opengrok
base: core22

architectures:
  - build-on: arm64
  - build-on: amd64

plugs:
  source-location:
    interface: content
    target: $SNAP_COMMON/src
  data-location:
    interface: content
    target: $SNAP_COMMON/data
  src-updater:
    interface: content
    target: $SNAP/src-updater

slots:
  source-share:
    interface: content
    write:
      - $SNAP_COMMON/src
  tools:
    interface: content
    read:
      - $SNAP/usr

environment:
  JAVA_HOME:       "$SNAP/usr/lib/jvm/java-openjdk"
  CLASSPATH:       "$SNAP/lib:$SNAP/dist/lib:$SNAP/dist/share/lib:$SNAP/plugins"
  PATH:            "$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$SNAP/usr/lib/jvm/java-openjdk/bin:$SNAP/usr/lib/jvm/java-openjdk/jre/bin:$SNAP/opengrok-tools/bin:$PATH"
  LD_LIBRARY_PATH: "${SNAP}/lib/${CRAFT_ARCH_TRIPLET}:${SNAP}/lib:${SNAP}/usr/lib:${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}:/usr/lib/${CRAFT_ARCH_TRIPLET}"
  SNAP_SHM_PREFIX: "snap.${SNAP_INSTANCE_NAME}."
  SSH_AUTH_SOCK:   "${SNAP_DATA}/ssh-agent.socket"

layout:
  /usr/lib/git-core:
    bind: $SNAP/usr/lib/git-core
  /usr/share/git-core:
    bind: $SNAP/usr/share/git-core

apps:
  opengrok:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  config-merge:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-config-merge
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  deploy:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-deploy
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - system-observe

  groups:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-groups
    plugs:
      - home
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  index-all:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-index-all
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  indexer:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-indexer
    plugs:
      - home
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  java:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-java
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  mirror:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-mirror
    plugs:
      - home
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  projadm:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-projadm
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  add-project:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-add-project
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  reindex-project:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-reindex-project
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  sync:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-sync
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  import-dpkg-list:
    command: bin/command.import-dpkg-list

  help:
    command: bin/snap-help

  tomcat:
    command-chain:
      - bin/read-settings
    command: bin/tomcat-control run
    stop-command: bin/tomcat-control stop -force
    daemon: simple
    plugs:
      - process-control
      - removable-media
      - system-observe
      - mount-observe
      - network-bind
    environment:
      # installation pathes are based of CATALINA_HOME
      CATALINA_HOME: $SNAP
      # writable pathes are based of CATALINA_BASE
      CATALINA_BASE:   $SNAP_COMMON
      CATALINA_PID:  ${SNAP_DATA}/tomcat.pid
      CATALINA_TMPDIR: /tmp

  index-sync-daemon:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-sync
    daemon: simple
    timer: 00:30~01:00
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  rebuild-index-helper:
    command-chain:
      - bin/read-settings
      - opengrok-tools/bin/activate-exec
    command: bin/command.opengrok-rebuild-index
    daemon: simple
    install-mode: disable
    after:
      - tomcat
      - ssh-agent
    plugs:
      - home
      - log-observe
      - mount-observe
      - network-bind
      - process-control
      - removable-media
      - ssh-keys
      - system-observe

  update-source:
    command-chain:
      - bin/read-settings
    command: bin/update-src
    plugs:
      - home
      - mount-observe
      - network-bind
      - removable-media
      - ssh-keys
    environment:
      GIT_CONFIG_NOSYSTEM: 1

  ssh-agent:
    command: usr/bin/ssh-agent -D -a $SSH_AUTH_SOCK
    daemon: simple
    plugs:
      - home
      - network-bind
      - ssh-keys

parts:
  tomcat:
    plugin: ant
    source: https://github.com/apache/tomcat.git
    source-type: git
    source-branch: 10.0.x
    source-depth: 1
    override-pull: |
      craftctl default
      git checkout $(git tag -l | grep 10.0. | sort --version-sort | tail -1)
    stage-packages:
      - openjdk-17-jre-headless
    override-build: |
      craftctl default
      cp -r output/build/* ${CRAFT_PART_INSTALL}
    stage:
      - -etc/java-*-openjdk
      - -bin/java
      - -usr/lib/jvm

  apr:
    plugin: autotools
    source: https://github.com/apache/apr.git
    configflags:
      - --bindir=/usr/bin
      - --includedir=/usr/include
      - --libdir=/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
      - --with-installbuilddir=/usr/share/apr-1.0/build
    override-pull: |
      snapcraftctl pull
      # ignore test and rc tags
      latest_tag=$(git tag -l 1.7* | grep --invert-match -e "\-rc" -e "\-test"  | sort -V | tail -1)
      git checkout ${latest_tag}
    override-build: |
      touch libtoolT
      ./buildconf
      snapcraftctl build
    prime:
      - -usr/include
      - -usr/lib/*/libapr-1*.a
      - -usr/lib/*/libapr-1*.la

  tomcat-native:
    after:
      - apr
      - tomcat
    plugin: autotools
    source: .
    source-subdir: native
    override-pull: |
      repo="https://github.com/apache/tomcat-native.git"
      tn_version="1.2."
      # ignore dereferenced tags
      latest_tag=$(git ls-remote --tags ${repo}  ${tn_version}\* | awk '{if ($2 !~ /^{}/ )  print $2}' | sed 's|refs/tags/||g' | sort -V | tail -1)
      # if do not re-pull if already cloned
      if [ ! -e ${CRAFT_PART_SRC}/.git ]; then
        git clone \
            --depth 1 \
            ${repo} \
            -b ${latest_tag} \
            ${CRAFT_PART_SRC}
      fi
    override-build: |
      cd ${CRAFT_PART_BUILD}/native
      CATALINA_HOME="/snap/${CRAFT_PROJECT_NAME}/current"
      JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
      # tomcat-native is funny and reuires active apr build directory
      apr_dir=${CRAFT_PART_BUILD}/../../apr/build
      sh buildconf --with-apr=${apr_dir}
      ./configure \
        --with-apr=${apr_dir} \
        --with-java-home=${JAVA_HOME} \
        --with-ssl=yes \
        --prefix=${CATALINA_HOME} \
        --libdir=/usr/lib/${CRAFT_ARCH_TRIPLET}
      make && make install DESTDIR=${SNAPCRAFT_PART_INSTALL}
    stage-packages:
      - libssl3
    stage:
      - -usr/lib/*/*.a
      - -usr/lib/*/*.la
      - -usr/share

  maven-deps:
    plugin: dump
    source: https://archive.apache.org/dist/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.tar.gz
    prime:
      - -*

  jre:
    plugin: nil
    stage-packages:
      - openjdk-17-jre-headless
    override-build: |
      # clean sym link, so we can use organize feature without worry for collision
      find ${CRAFT_PART_INSTALL}/usr/lib/jvm/ \
           -maxdepth 1 \
           -type l \
           -exec rm {} \;
      # fix symbolic link to match moved jvm
      mkdir -p ${CRAFT_PART_INSTALL}/bin
      ln -sf ../usr/lib/jvm/java-17-openjdk/bin/java \
             ${CRAFT_PART_INSTALL}/bin/java
    organize:
      'usr/lib/jvm/java-*-openjdk-*': usr/lib/jvm/java-openjdk

  opengrok:
    plugin: maven
    source: https://github.com/OpenGrok/OpenGrok.git
    source-type: git
    source-branch: master
    maven-openjdk-version: "11"
    maven-options:
      - -DskipTests=true
      - -Dmaven.javadoc.skip=false
      - -B
      - -V
    maven-targets:
      - plugins
    override-pull: |
      snapcraftctl pull
      # decide if to build master or release(tag)
      last_released_tag="$(snap info opengrok | awk '$1 == "latest/beta:" { print $2 }')"
      last_commited_tag=$(git describe --abbrev=0 --tags)
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_commited_tag}" != "${last_released_tag}" ]; then
        git checkout ${last_commited_tag}
        snapcraftctl set-version ${last_commited_tag}
      else
        snapcraftctl set-version $(git describe --tags)
      fi
    override-build: |
      snapcraftctl build
      echo "opengrok built successfully"
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/dist ${SNAPCRAFT_PART_INSTALL}/src-updater
      tar -xf distribution/target/opengrok-*.tar.gz -C ${SNAPCRAFT_PART_INSTALL}/dist/ --strip-components=1
      sed -i 's#java.util.logging.FileHandler.pattern = #java.util.logging.FileHandler.pattern = ${SNAP_COMMON}/logs/#g' \
        ${SNAPCRAFT_PART_INSTALL}/dist/doc/logging.properties
      # install opengrok-tools
      cd ${SNAPCRAFT_PART_INSTALL}
      python3 -m venv opengrok-tools
      cd opengrok-tools
      bin/python3 \
        -m pip install \
        --no-cache-dir \
        ${SNAPCRAFT_PART_INSTALL}/dist/tools/opengrok-tools.tar.gz
      ln -sf ../../usr/bin/python3 bin/python3
      sed -i \
        -e 's|VIRTUAL_ENV=\".*|VIRTUAL_ENV=\"${SNAP}/opengrok-tools\"|g' \
        -e 's|VIRTUAL_ENV \".*|VIRTUAL_ENV \"${SNAP}/opengrok-tools\"|g' \
        ${SNAPCRAFT_PART_INSTALL}/opengrok-tools/bin/activate.*
      # create active snap chain command
      cp ${SNAPCRAFT_PART_INSTALL}/opengrok-tools/bin/activate \
         ${SNAPCRAFT_PART_INSTALL}/opengrok-tools/bin/activate-exec
      chmod +x ${SNAPCRAFT_PART_INSTALL}/opengrok-tools/bin/activate-exec
      echo "\nexec \"\$@\"" >> \
         ${SNAPCRAFT_PART_INSTALL}/opengrok-tools/bin/activate-exec
      find ${SNAPCRAFT_PART_INSTALL}/opengrok-tools/bin \
        -type f \
        -exec sed -i 's|#!.*/parts/opengrok/install/opengrok-tools/bin/python3|#!/snap/'"${SNAPCRAFT_PROJECT_NAME}"'/current/opengrok-tools/bin/python3|g' {} \;
      # clean sym link, so we can use organize feature without worry for collision
      find ${SNAPCRAFT_PART_INSTALL}/usr/lib/jvm/ \
         -maxdepth 1 \
         -type l \
         -exec rm {} \;
      # fix sym link out of the snap for blacklisted.certs
      ln -sf \
        ../../../../../../etc/java-11-openjdk/security/blacklisted.certs \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/jvm/java-*-openjdk-*/lib/security/blacklisted.certs
      touch ${SNAPCRAFT_PART_INSTALL}/etc/java-11-openjdk/security/blacklisted.certs
    organize:
      'usr/lib/jvm/java-*-openjdk-*': usr/lib/jvm/java-openjdk

  # source control tools
  tools:
    plugin: nil
    stage-packages:
      - bzr
      - coreutils
      - cssc
      - cvs
      - curl
      - git
      - gitk
      - jq
      - libgnome-keyring0
      - libkdecore5
      - libkdeui5
      - libqtcore4
      - monotone
      - mercurial
      - openssh-client
      - procps
      - pxz
      - python3
      - python3-apt
      - python3-distutils
      - rcs
      - subversion
      - wget
      - xz-utils
    organize:
      usr/share/bash-completion/completions/git: git-completion.bash
      usr/bin/bzr.bzr: /usr/bin/bzr
    stage:
      - -usr/lib/*/libapr-1.*

  # helper scripts
  glue:
    source: glue
    plugin: dump

  universal-ctags:
    plugin: autotools
    source: https://github.com/universal-ctags/ctags.git
    autotools-configure-parameters:
      - --enable-yaml
      - --enable-xml
      - --enable-json
      - --prefix=/usr
      - --bindir=/usr/bin
      - --libdir=/usr/lib/${CRAFT_ARCH_TRIPLET}
    stage-packages:
      - libjansson4
      - libicu70
      - libxml2
      - libyaml-0-2
    override-pull: |
      craftctl default
      git checkout $(git tag -l | sort --version-sort | tail -1)

  libc-shm-shim:
    plugin: nil
    stage-snaps:
      - libc-shm-shim/22/beta

build-snaps:
  - ant

build-packages:
  - curl
  - libjansson-dev
  - libssl-dev
  - libtool-bin
  - libxml2-dev
  - libxml2-utils
  - libyaml-dev
  - openjdk-17-jdk-headless
  - pkg-config
  - python3-venv
  - python3-pip
  - shtool
  - xmlstarlet
